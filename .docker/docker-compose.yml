version: '3'
networks:
  outbox-net:
    driver: bridge   
services: 
  zookeeper-server:
    image: 'bitnami/zookeeper:latest'
    networks:
      - outbox-net
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka-server1:
    image: 'bitnami/kafka:latest'
    networks:
      - outbox-net    
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-server
  mongo:
    image: mongo
    restart: always
    networks: 
        - outbox-net
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: P@ssw0rd
    ports:
      - 27017:27017
  mongo-express:
    image: mongo-express
    restart: always
    networks: 
        - outbox-net
    ports:
      - 2005:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: P@ssw0rd
  
  postgresdb:
    image: postgres
    restart: always
    networks: 
        - outbox-net
    ports:
       - 5432:5432
    environment:
      POSTGRES_PASSWORD: outbox-P@ssword
  outbox:
    container_name: outboxservice
    build:
      context: /outbox-service/.
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    command: npm run start
    networks:
      - outbox-net
    depends_on:
      - postgresdb
      - kafka-server1
  orderlog:
    container_name: orderlogservice
    build:
      context: /no-sql-service/.
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3001:3001
    command: npm run start
    networks:
      - outbox-net
    depends_on:
      - mongo
      - kafka-server1